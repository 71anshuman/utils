{"version":3,"sources":["components/common/Navlink.js","components/Header.js","helpers/helpers.js","components/sip-calculator/Breakup.js","components/sip-calculator/InvestedVsGainChart.js","components/sip-calculator/DataOverview.js","hooks/useFinInput.js","components/common/Input.js","components/sip-calculator/SipCalculator.js","components/multi-line-to-single-line/MultiLineToSingleLine.js","components/salary-hike-percentage-calculator/SalaryHikePerCalculator.js","App.js","reportWebVitals.js","index.js"],"names":["Navlink","props","text","url","to","activeClassName","className","Header","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","target","href","numberFormat","value","Math","round","displayType","thousandsGroupStyle","thousandSeparator","prefix","toSingleLine","multiLineString","noSpaces","delimiter","replace","Breakup","data","useState","showTable","setShowTable","length","onClick","state","map","rec","i","year","month","initialBalance","investment","interest","balanceAtEndOfMonth","InvestedVsGainChart","meta","investmentAmount","interestAmount","width","height","chartType","loader","options","title","is3D","titleTextStyle","fontSize","rootProps","DataOverview","finalBalance","useFinInput","initialValues","values","setValues","e","name","parseFloat","Input","max","autoComplete","finance","Finance","SipCalculator","useEffect","document","sipAmount","rateOfReturn","period","handleChange","setMeta","setData","style","margin","paddingTop","onChange","placeholder","preventDefault","transactions","mon","parseInt","totalAmountThisMonth","thisMonthInterest","CI","push","totalInterest","invested","calculate","MultiLineToSingleLine","setText","for","rows","SalaryHikePerCalculator","currentSalary","perIncrement","newSalary","setNewSalary","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e95d364c.chunk.js","sourcesContent":["import {NavLink} from 'react-router-dom';\n\nexport default function Navlink(props) {\n    const {text, url} = props;\n    return (\n        <NavLink to={url} activeClassName=\"active\" className=\"nav-link\">{text}</NavLink>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport Navlink from '../components/common/Navlink'\n\nexport default function Header() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container\">\n                <Link className=\"navbar-brand\" to=\"/\">Tools</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <Navlink url=\"/sip-calculator\" text=\"SIP Calculator\"/>\n                        <Navlink url=\"/multi-line-to-single-line\" text=\"Multi Line To Single Line\"/>\n                        <Navlink url=\"/salary-hike-calculator\" text=\"Salary Hike Calculator\" />\n                    </ul>\n                    <ul className=\"navbar-nav ml-auto\" >\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link\" target=\"_new\" href=\"https://github.com/71anshuman\">Dev</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n","import NumberFormat from 'react-number-format';\n\nexport const numberFormat = (value) => {\n    return <NumberFormat value={Math.round(value, 2)} displayType={'text'} thousandsGroupStyle=\"lakh\" thousandSeparator={true} prefix=\"&#8377;\" />\n};\n\nexport const toSingleLine = (multiLineString, noSpaces) => {\n    var delimiter = noSpaces ? '' : ' ';\n    return  multiLineString.replace(/\\s\\s+/g, delimiter).replace(/(?:\\r\\n|\\r|\\n)/g, \" \");\n};\n","import React, { useState } from 'react'\nimport { numberFormat } from '../../helpers/helpers'\n\nexport default function Breakup(props) {\n    const { data } = props;\n    const [showTable, setShowTable] = useState(false);\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                {data.length > 0 &&\n                    <button className=\"btn btn-light text-uppercase\" onClick={(() => setShowTable(state => !state))}> { showTable ? 'hide table' : 'Show Detail' }</button>\n                }\n                {showTable &&\n                    <table className=\"table table-striped table-hover table-sm scroll\">\n                        <caption className=\"text-uppercase text-muted text-center\">Investment and Wealth gain Breakup</caption>\n                        <thead>\n                        <tr>\n                            <th>Year</th>\n                            <th>Month</th>\n                            <th>Balance@Bigin</th>\n                            <th>Investment</th>\n                            <th>Interest</th>\n                            <th>Balance@End</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            data.map((rec, i) => {\n                            const {year, month, initialBalance, investment, interest, balanceAtEndOfMonth} = rec;\n                            return <tr key={i}>\n                                <td>{ year }</td>\n                                <td>{ month }</td>\n                                <td>{ numberFormat(initialBalance) }</td>\n                                <td>{ numberFormat(investment) }</td>\n                                <td>{ numberFormat(interest) }</td>\n                                <td>\n                                { numberFormat(balanceAtEndOfMonth) }\n                                </td>\n                            </tr>\n                            })\n                        }\n                        </tbody>\n                    </table>\n                }\n            </div>\n        </div>\n    )\n}\n","import { Chart } from \"react-google-charts\";\n\nexport default function InvestedVsGainChart(props) {\n    const { meta } = props;\n    const { investmentAmount, interestAmount } = meta;\n    return (\n        <div>\n            {investmentAmount !== 0 &&\n                <Chart\n                    width={'100%'}\n                    height={'400px'}\n                    chartType=\"PieChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                        ['Amount', 'INR'],\n                        ['Invested', investmentAmount],\n                        ['Gain', interestAmount],\n                    ]}\n                    options={\n                        {\n                            title: 'Gain VS Invested',\n                            is3D: true,\n                            titleTextStyle: {\n                                fontSize: '24px',\n                            }\n                        }\n                    }\n                    rootProps={{ 'data-testid': '2' }}\n                />\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { numberFormat } from '../../helpers/helpers'\n\nexport default function DataOverview({meta}) {\n    const { investmentAmount, interestAmount, finalBalance } = meta;\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"jumbotron jumbotron-fluid bg-white border-bottom border-grey\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <h4><i className=\"fa fa-bars\"></i>\n                                { numberFormat(investmentAmount) }<br/>\n                                <small className=\"text-muted\">INVESTED</small>\n                            </h4>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <h4>\n                                { numberFormat(interestAmount) }<br/>\n                                <small className=\"text-muted\">GAIN</small>\n                            </h4>\n                        </div>\n                        <div className=\"col-md-4\">\n                        <h4>\n                            { numberFormat(finalBalance) }<br/>\n                            <small className=\"text-muted text-uppercase\">maturity value</small>\n                        </h4>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useState } from 'react';\n\nexport const useFinInput = (initialValues) => {\n    const [values, setValues] = useState(initialValues);\n\n    return [values, e => {\n        setValues({\n            ...values,\n            [e.target.name]: parseFloat(e.target.value)\n        })\n    }]\n}","export default function Input(props) {\n    const { name } = props;\n    return (\n        <input max=\"100\" autoComplete=\"off\" name={name} className=\"form-control\" type=\"number\" {...props}/>\n    )\n}\n","import React, {useState, useEffect} from 'react'\n\nimport { Finance } from 'financejs';\nimport Breakup from './Breakup';\nimport InvestedVsGainChart from './InvestedVsGainChart';\nimport DataOverview from './DataOverview';\nimport { useFinInput } from '../../hooks/useFinInput';\nimport Input from '../common/Input';\n\nlet finance = new Finance();\n\nexport default function SipCalculator() {\n    useEffect(() => {\n        document.title = \"SIP Calculator\"\n    }, []);\n\n    const [{sipAmount, period, rateOfReturn}, handleChange] = useFinInput(\n        {\n          sipAmount: '',\n          rateOfReturn: '',\n          period: '',\n        }\n    );\n    \n    const [meta, setMeta] = useState({investmentAmount: 0, interestAmount: 0, finalBalance: 0});\n    const [data, setData] = useState([]);\n    \n    function calculate() {\n        let investmentAmount = 0;\n        let interest = 0;\n        let balanceAtEndOfMonth = 0;\n        let transactions = [];\n        let year = 1;\n        let month;\n        for (let i = 1; i <= period * 12; i++) {\n          let mon = parseInt(i % 12);\n          month = mon === 0 ? 12 : mon;\n          const totalAmountThisMonth = investmentAmount + sipAmount;\n          balanceAtEndOfMonth = totalAmountThisMonth * (1 + (rateOfReturn/100) / 12);\n          const thisMonthInterest = Math.round(finance.CI(rateOfReturn/12, 1, totalAmountThisMonth, 1) - totalAmountThisMonth);\n          interest += thisMonthInterest;\n    \n          transactions.push({\n            year: year,\n            month: month,\n            initialBalance: Math.round(investmentAmount),\n            investment: sipAmount,\n            interest: thisMonthInterest,\n            balanceAtEndOfMonth: Math.round(balanceAtEndOfMonth),\n            totalInterest: interest\n          });\n    \n          investmentAmount = balanceAtEndOfMonth;\n          if (mon === 0) {\n            year++;\n          }\n        }\n    \n        setData(transactions);\n        const invested = period * 12 * sipAmount;\n        setMeta({\n          investmentAmount: invested ?? 0,\n          period,\n          rateOfReturn,\n          finalBalance: investmentAmount,\n          interestAmount: parseInt(investmentAmount - invested),\n        });\n    \n    }\n\n    return (\n        <>\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8\">\n                        <h1 className=\"display-6\">SIP Calculator</h1>\n                        <p className=\"lead\">SIP is the best way to accumulate long term wealth.</p>\n                        <div className=\"row\">\n                            <DataOverview meta={meta} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\" style={{margin: 'auto 0', paddingTop: '5rem'}}>\n                        <form>\n                            <div className=\"form-group\">\n                                <div className=\"input-group\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\">&#8377;</span>\n                                    </div>\n                                    <Input name='sipAmount' value={sipAmount} onChange={handleChange} placeholder=\"How much would invest monthly?\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"input-group mb-3\">\n                                    <Input name='period' value={period} onChange={handleChange} placeholder=\"Investment Period\" />\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text\">Years</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"input-group mb-3\">\n                                    <Input name='rateOfReturn' value={rateOfReturn} onChange={handleChange} placeholder=\"Expected Annual Returns (%)\" />\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text\">%</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-block btn-light btn-outline\" onClick={(e) =>{e.preventDefault(); calculate()}}>Calculate</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-4\">\n                <InvestedVsGainChart  meta={meta}/>\n            </div>\n            <div className=\"col-md-8\">\n                { data && <Breakup data={data} /> }\n            </div>\n        </div>\n        </>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport {toSingleLine} from '../../helpers/helpers';\n\nexport default function MultiLineToSingleLine() {\n    useEffect(() => {\n        document.title = \"Multi Line To Single Line text converter\"\n    }, []);\n\n    const [text, setText] = useState(\"\");\n\n    return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1 className=\"display-6\">Multi Line To Single Line text conveter</h1>\n                            <p className=\"lead\">You can convert multiner text to single line.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label for=\"multiLineText\">Type/Paste multiliner text</label>\n                            <textarea rows=\"16\" className=\"form-control\" aria-label=\"With textarea\" name=\"multiLineText\" onChange={e => setText(e.target.value)}></textarea>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                        <label className=\"\">Converted text</label>\n                        <textarea rows=\"16\" className=\"form-control\" value={toSingleLine(text, true)}></textarea>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react'\nimport Input from '../common/Input'\nimport { useFinInput } from '../../hooks/useFinInput';\nimport { numberFormat } from '../../helpers/helpers';\n\nexport default function SalaryHikePerCalculator() {\n    useEffect(() => {\n        document.title = \"Salary Hike Percentage Calculator\"\n    }, []);\n\n    const [{currentSalary, perIncrement}, handleChange] = useFinInput(\n        {\n          currentSalary: 100000,\n          perIncrement: 21,\n        }\n    );\n\n    const [newSalary, setNewSalary] = useState(null);\n\n    function calculate () {\n        setNewSalary((currentSalary * perIncrement / 100 ) + currentSalary);\n    }\n\n    return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1 className=\"display-6\">Salary Hike Calculator</h1>\n                            <hr />\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <h2><small><em>Your new Salary is:</em></small> <span className=\"text-muted\">{numberFormat(newSalary)}</span></h2>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 bg-white\" style={{margin: 'auto 0', paddingTop: '1rem'}}>\n                            <form>\n                                <div className=\"form-group\">\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">&#8377;</span>\n                                        </div>\n                                        <Input name='currentSalary' value={currentSalary} onChange={handleChange} placeholder=\"Current Salary\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <div className=\"input-group mb-3\">\n                                        <Input name='perIncrement' value={perIncrement} onChange={handleChange} placeholder=\"Percentage incremented\" />\n                                        <div className=\"input-group-append\">\n                                            <span className=\"input-group-text\">%</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button className=\"btn btn-block btn-light btn-outline\" onClick={(e) =>{e.preventDefault(); calculate()}}>Calculate</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import Header from './components/Header';\nimport {Switch, Route} from 'react-router-dom';\nimport SipCalculator from './components/sip-calculator'\nimport MultiLineToSingleLine from './components/multi-line-to-single-line';\nimport SalaryHikePerCalculator from './components/salary-hike-percentage-calculator';\n\nfunction App() {\n  return (\n    <>\n    <Header />\n    <div className=\"container-fluid\">\n    <Switch>\n      <Route exact path=\"/\">\n        <SipCalculator />\n      </Route>\n      <Route path=\"/sip-calculator\">\n        <SipCalculator />\n      </Route>\n      <Route path=\"/multi-line-to-single-line\">\n        <MultiLineToSingleLine />\n      </Route>\n      <Route path=\"/salary-hike-calculator\">\n        <SalaryHikePerCalculator />\n      </Route>\n    </Switch>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}