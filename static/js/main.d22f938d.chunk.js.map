{"version":3,"sources":["components/header/Menu.js","components/header/Header.js","helpers/helpers.js","components/sip-calculator/Breakup.js","components/sip-calculator/InvestedVsGainChart.js","components/sip-calculator/DataOverview.js","hooks/useFinInput.js","components/common/Input.js","components/sip-calculator/SipCalculator.js","components/multi-line-to-single-line/MultiLineToSingleLine.js","components/salary-hike-percentage-calculator/SalaryHikePerCalculator.js","components/password-generator/PasswordGenerator.js","components/words-counter/WordCounter.js","components/json-formatter/JsonFormatter.js","components/base64-converter/Base64Converter.js","components/emi-calculator/Breakup.js","components/emi-calculator/AmountVsInterestChart.js","components/emi-calculator/InterestVsLoanAmountChart.js","components/emi-calculator/DataOverview.js","components/emi-calculator/EMICalculator.js","components/sidebar/ButtonLink.js","components/sidebar/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","sidebar","showSidebar","setShowSidebar","className","onClick","xmlns","width","height","fill","viewBox","fillRule","d","Header","to","id","target","href","numberFormat","value","Math","round","displayType","thousandsGroupStyle","thousandSeparator","prefix","toSingleLine","multiLineString","noSpaces","delimiter","replace","alpha","numbers","symbols","generatePassword","length","chars","password","i","charAt","floor","random","countWords","str","res","split","map","s","trimStr","trim","push","getInterestVsLoanAmountData","installments","data","forEach","installment","capital","interest","Breakup","props","useState","showTable","setShowTable","state","rec","year","month","initialBalance","investment","balanceAtEndOfMonth","InvestedVsGainChart","meta","investmentAmount","interestAmount","chartType","loader","options","title","is3D","titleTextStyle","fontSize","rootProps","DataOverview","finalBalance","useFinInput","initialValues","values","setValues","e","name","parseFloat","Input","max","autoComplete","type","finance","Finance","SipCalculator","useEffect","document","sipAmount","rateOfReturn","period","handleChange","setMeta","setData","style","margin","paddingTop","onChange","placeholder","preventDefault","transactions","mon","parseInt","totalAmountThisMonth","thisMonthInterest","CI","totalInterest","invested","calculate","MultiLineToSingleLine","text","setText","htmlFor","rows","aria-label","readOnly","SalaryHikePerCalculator","currentSalary","perIncrement","newSalary","setNewSalary","toFixed","PasswordGenerator","len","setLen","setPassword","hasSymbols","hasNumbers","setBoolean","copied","setCopied","createPassword","disabled","checked","WordCounter","JsonFormatter","prerryJSON","setPrettyJSON","isInvalid","setIsInvalid","prettifyJSON","json","JSON","parse","err","stringify","undefined","toPrettyJson","Base64Converter","encoded","setEncoded","btoa","unescape","encodeURIComponent","decodeURIComponent","escape","window","atob","class","remain","AmountVsInterestChart","loanAmount","InterestVsLoanAmountChart","hAxis","color","vAxis","minValue","chartArea","legend","position","maxLines","emi","EMICalculator","rateOfInterest","tenure","emiAmount","padding","loan","LoanJS","Loan","amount","sum","interestSum","ButtonLink","url","activeClassName","Sidebar","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d22f938d.chunk.js","sourcesContent":["import React from \"react\";\nimport './Menu.css'\n// import SvgGraphics from \"../../svgGraphics\";\n\nexport default function Menu({sidebar}) {\n    const {showSidebar, setShowSidebar} = sidebar;\n\n    return (\n        <button className=\"btn btn-outline menu-button\" onClick={() => setShowSidebar(!showSidebar)}>\n            {/* <SvgGraphics iconType=\"menu\" /> */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n                <path fillRule=\"evenodd\" d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\n            </svg>\n        </button>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n// import Navlink from '../common/Navlink'\nimport Menu from './Menu'\n\nexport default function Header({sidebar}) {\n    return (\n        <nav className=\"navbar navbar-expand-lg sticky-top navbar-light bg-light\">\n            <Menu sidebar={sidebar} />\n            <div className=\"container\">\n                <Link className=\"navbar-brand\" to=\"/\">Tools</Link>\n                <div id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        {/* <Navlink url=\"/sip-calculator\" text=\"SIP Calc\"/>\n                        <Navlink url=\"/multi-line-to-single-line\" text=\"Multi To Single Line\"/>\n                        <Navlink url=\"/salary-hike-calculator\" text=\"Salary Hike Calc\" />\n                        <Navlink url=\"/password-generator\" text=\"Password Gen\" />\n                        <Navlink url=\"/word-counter\" text=\"Word Counter\" />\n                        <Navlink url=\"/json-formatter\" text=\"JSON Formatter\" />\n                        <Navlink url=\"/base-64-converter\" text=\"Base64 Conv\" />\n                        <Navlink url=\"/emi-calculator\" text=\"EMI Calc\" /> */}\n                    </ul>\n                    <ul className=\"navbar-nav ml-auto\" >\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link\" target=\"_new\" href=\"https://github.com/71anshuman\">Dev</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n","import NumberFormat from 'react-number-format';\n\nexport const numberFormat = (value) => {\n    return <NumberFormat value={Math.round(value, 2)} displayType={'text'} thousandsGroupStyle=\"lakh\" thousandSeparator={true} prefix=\"&#8377;\" />\n};\n\nexport const toSingleLine = (multiLineString, noSpaces) => {\n    var delimiter = noSpaces ? '' : ' ';\n    return  multiLineString.replace(/\\s\\s+/g, delimiter).replace(/(?:\\r\\n|\\r|\\n)/g, \" \");\n};\n\nconst alpha = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\nconst numbers = '0123456789'\nconst symbols = '!@#$%^&*_-+='\n\nexport const createPassword = (length = 8, hasNumbers = true, hasSymbols = true) => {\n  let chars = alpha\n  chars += hasNumbers ? numbers : ''\n  chars += hasSymbols ? symbols : ''\n  return generatePassword(length, chars)\n}\n\nconst generatePassword = (length, chars) => {\n  let password = ''\n  for (let i = 0; i < length; i++) {\n    password += chars.charAt(Math.floor(Math.random() * chars.length))\n  }\n  return password\n}\n\n\nexport const countWords = (str) => {\n  let res = [];\n  str = str.replace(/[\\t\\n\\r.?!]/gm, \" \").split(\" \");\n  str.map((s) => {\n    let trimStr = s.trim();\n    if (trimStr.length > 0) {\n      res.push(trimStr);\n    }\n    return null;\n  });\n  return res.length;\n}\n\nexport const getInterestVsLoanAmountData = (installments) => {\n  var data = [[\n    'Year', 'InterestAmount', 'LoanAmount'\n  ]];\n  var i = 1;\n  installments.forEach(installment => {\n    const {capital, interest} = installment;\n    data.push([i++, interest, capital]);\n  });\n  return data;\n}","import React, { useState } from 'react'\nimport { numberFormat } from '../../helpers/helpers'\n\nexport default function Breakup(props) {\n    const { data } = props;\n    const [showTable, setShowTable] = useState(false);\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                {data.length > 0 &&\n                    <button className=\"btn btn-light text-uppercase\" onClick={(() => setShowTable(state => !state))}> { showTable ? 'hide table' : 'Show Detail' }</button>\n                }\n                {showTable &&\n                    <table className=\"table table-striped table-hover table-sm scroll\">\n                        <caption className=\"text-uppercase text-muted text-center\">Investment and Wealth gain Breakup</caption>\n                        <thead>\n                        <tr>\n                            <th>Year</th>\n                            <th>Month</th>\n                            <th>Balance@Bigin</th>\n                            <th>Investment</th>\n                            <th>Interest</th>\n                            <th>Balance@End</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            data.map((rec, i) => {\n                            const {year, month, initialBalance, investment, interest, balanceAtEndOfMonth} = rec;\n                            return <tr key={i}>\n                                <td>{ year }</td>\n                                <td>{ month }</td>\n                                <td>{ numberFormat(initialBalance) }</td>\n                                <td>{ numberFormat(investment) }</td>\n                                <td>{ numberFormat(interest) }</td>\n                                <td>\n                                { numberFormat(balanceAtEndOfMonth) }\n                                </td>\n                            </tr>\n                            })\n                        }\n                        </tbody>\n                    </table>\n                }\n            </div>\n        </div>\n    )\n}\n","import { Chart } from \"react-google-charts\";\n\nexport default function InvestedVsGainChart(props) {\n    const { meta } = props;\n    const { investmentAmount, interestAmount } = meta;\n    return (\n        <div>\n            {investmentAmount !== 0 &&\n                <Chart\n                    width={'100%'}\n                    height={'400px'}\n                    chartType=\"PieChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                        ['Amount', 'INR'],\n                        ['Invested', investmentAmount],\n                        ['Gain', interestAmount],\n                    ]}\n                    options={\n                        {\n                            title: 'Gain VS Invested',\n                            is3D: true,\n                            titleTextStyle: {\n                                fontSize: '24px',\n                            }\n                        }\n                    }\n                    rootProps={{ 'data-testid': '2' }}\n                />\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { numberFormat } from '../../helpers/helpers'\n\nexport default function DataOverview({meta}) {\n    const { investmentAmount, interestAmount, finalBalance } = meta;\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"jumbotron jumbotron-fluid bg-white border-bottom border-grey\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <h4><i className=\"fa fa-bars\"></i>\n                                { numberFormat(investmentAmount) }<br/>\n                                <small className=\"text-muted\">INVESTED</small>\n                            </h4>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <h4>\n                                { numberFormat(interestAmount) }<br/>\n                                <small className=\"text-muted\">GAIN</small>\n                            </h4>\n                        </div>\n                        <div className=\"col-md-4\">\n                        <h4>\n                            { numberFormat(finalBalance) }<br/>\n                            <small className=\"text-muted text-uppercase\">maturity value</small>\n                        </h4>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useState } from 'react';\n\nexport const useFinInput = (initialValues) => {\n    const [values, setValues] = useState(initialValues);\n\n    return [values, e => {\n        const {name, value} = e.target;\n        setValues({\n            ...values,\n            [name]: parseFloat(value)\n        })\n    }]\n}","export default function Input(props) {\n    const { name } = props;\n    return (\n        <input max=\"100\" autoComplete=\"off\" name={name} className=\"form-control\" type=\"number\" {...props}/>\n    )\n}\n","import React, {useState, useEffect} from 'react'\n\nimport { Finance } from 'financejs';\nimport Breakup from './Breakup';\nimport InvestedVsGainChart from './InvestedVsGainChart';\nimport DataOverview from './DataOverview';\nimport { useFinInput } from '../../hooks/useFinInput';\nimport Input from '../common/Input';\n\nlet finance = new Finance();\n\nexport default function SipCalculator() {\n    useEffect(() => {\n        document.title = \"SIP Calculator\"\n    }, []);\n\n    const [{sipAmount, period, rateOfReturn}, handleChange] = useFinInput(\n        {\n          sipAmount: '',\n          rateOfReturn: '',\n          period: '',\n        }\n    );\n    \n    const [meta, setMeta] = useState({investmentAmount: 0, interestAmount: 0, finalBalance: 0});\n    const [data, setData] = useState([]);\n    \n    function calculate() {\n        let investmentAmount = 0;\n        let interest = 0;\n        let balanceAtEndOfMonth = 0;\n        let transactions = [];\n        let year = 1;\n        let month;\n        for (let i = 1; i <= period * 12; i++) {\n          let mon = parseInt(i % 12);\n          month = mon === 0 ? 12 : mon;\n          const totalAmountThisMonth = investmentAmount + sipAmount;\n          balanceAtEndOfMonth = totalAmountThisMonth * (1 + (rateOfReturn/100) / 12);\n          const thisMonthInterest = Math.round(finance.CI(rateOfReturn/12, 1, totalAmountThisMonth, 1) - totalAmountThisMonth);\n          interest += thisMonthInterest;\n    \n          transactions.push({\n            year: year,\n            month: month,\n            initialBalance: Math.round(investmentAmount),\n            investment: sipAmount,\n            interest: thisMonthInterest,\n            balanceAtEndOfMonth: Math.round(balanceAtEndOfMonth),\n            totalInterest: interest\n          });\n    \n          investmentAmount = balanceAtEndOfMonth;\n          if (mon === 0) {\n            year++;\n          }\n        }\n    \n        setData(transactions);\n        const invested = period * 12 * sipAmount;\n        setMeta({\n          investmentAmount: invested ?? 0,\n          period,\n          rateOfReturn,\n          finalBalance: investmentAmount,\n          interestAmount: parseInt(investmentAmount - invested),\n        });\n    \n    }\n\n    return (\n        <>\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8\">\n                        <h1 className=\"display-6\">SIP Calculator</h1>\n                        <p className=\"lead\">SIP is the best way to accumulate long term wealth.</p>\n                        <div className=\"row\">\n                            <DataOverview meta={meta} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-4 bg-white\" style={{margin: 'auto 0', paddingTop: '5rem'}}>\n                        <form>\n                            <div className=\"form-group\">\n                                <div className=\"input-group\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\">&#8377;</span>\n                                    </div>\n                                    <Input name='sipAmount' value={sipAmount} onChange={handleChange} placeholder=\"How much would invest monthly?\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"input-group mb-3\">\n                                    <Input name='period' value={period} onChange={handleChange} placeholder=\"Investment Period\" />\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text\">Years</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"input-group mb-3\">\n                                    <Input name='rateOfReturn' value={rateOfReturn} onChange={handleChange} placeholder=\"Expected Annual Returns (%)\" />\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text\">%</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-block btn-dark btn-outline\" onClick={(e) =>{e.preventDefault(); calculate()}}>Calculate</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-4\">\n                <InvestedVsGainChart  meta={meta}/>\n            </div>\n            <div className=\"col-md-8\">\n                { data && <Breakup data={data} /> }\n            </div>\n        </div>\n        </>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport {toSingleLine} from '../../helpers/helpers';\n\nexport default function MultiLineToSingleLine() {\n    useEffect(() => {\n        document.title = \"Multi Line To Single Line text converter\"\n    }, []);\n\n    const [text, setText] = useState(\"\");\n\n    return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1 className=\"display-6\">Multi Line To Single Line text conveter</h1>\n                            <p className=\"lead\">You can convert multiliner text to single line.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"multiLineText\">Type/Paste multiliner text</label>\n                            <textarea rows=\"16\" className=\"form-control\" aria-label=\"With textarea\" name=\"multiLineText\" onChange={e => setText(e.target.value)}></textarea>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                        <label className=\"\">Converted text</label>\n                        <textarea rows=\"16\" readOnly className=\"form-control\" value={toSingleLine(text, true)}></textarea>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react'\nimport Input from '../common/Input'\nimport { useFinInput } from '../../hooks/useFinInput';\nimport { numberFormat } from '../../helpers/helpers';\n\nexport default function SalaryHikePerCalculator() {\n    useEffect(() => {\n        document.title = \"Salary Hike Percentage Calculator\"\n    }, []);\n    let percentage;\n    const [{currentSalary, perIncrement}, handleChange] = useFinInput(\n        {\n          currentSalary: 0,\n          perIncrement: 0,\n        }\n    );\n\n    const [newSalary, setNewSalary] = useState(0);\n\n    function calculate () {\n        setNewSalary((currentSalary * perIncrement / 100 ) + currentSalary);\n    }\n\n    function calculatePercentage () {\n        const salaryHiked = (newSalary - currentSalary);\n        percentage = (salaryHiked / currentSalary) * 100;\n        handleChange({target:{name: 'perIncrement', value: percentage}});\n    }\n\n    return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1 className=\"display-6\">Salary Hike Calculator</h1>\n                            <hr />\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    {newSalary > 0 &&\n                                        <h2>\n                                            <small>\n                                                <em>Your new Salary is:</em>\n                                            </small>\n                                            <span className=\"text-muted\">{numberFormat(newSalary)}</span>\n                                        </h2>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 bg-white\" style={{margin: 'auto 0', paddingTop: '1rem'}}>\n                            <form>\n                                <div className=\"form-group\">\n                                    <label>Current Salary</label>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">&#8377;</span>\n                                        </div>\n                                        <Input name='currentSalary' value={currentSalary} onChange={handleChange} placeholder=\"Current Salary\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Hike Percentage</label>\n                                    <div className=\"input-group mb-3\">\n                                        <Input name='perIncrement' value={perIncrement.toFixed(2)} onChange={handleChange} placeholder=\"Percentage incremented\" />\n                                        <div className=\"input-group-append\">\n                                            <span className=\"input-group-text\">%</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button className=\"btn btn-block btn-dark btn-outline\" onClick={(e) =>{e.preventDefault(); calculate()}}>Calculate</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1 className=\"display-6\">Salary Percentage Hike Calculator</h1>\n                            <hr />\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    {perIncrement > 0 &&\n                                        <h2>\n                                            <small>\n                                                <em>Your salary hike percentage is:</em>\n                                            </small>\n                                            <span className=\"text-muted\">{perIncrement.toFixed(2)}%</span>\n                                        </h2>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 bg-white\" style={{margin: 'auto 0', paddingTop: '1rem'}}>\n                            <form>\n                                <div className=\"form-group\">\n                                    <label>Current Salary</label>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">&#8377;</span>\n                                        </div>\n                                        <Input name='currentSalary' value={currentSalary} onChange={handleChange} placeholder=\"Current Salary\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>New Salary</label>\n                                    <div className=\"input-group mb-3\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">&#8377;</span>\n                                        </div>\n                                        <Input name='newSalary' value={newSalary} onChange={e => setNewSalary(e.target.value)} placeholder=\"New salary\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button className=\"btn btn-block btn-dark btn-outline\" onClick={(e) =>{e.preventDefault(); calculatePercentage()}}>Calculate</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import {useState} from 'react'\nimport Input from '../common/Input';\nimport { createPassword } from '../../helpers/helpers';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nexport default function PasswordGenerator() {\n    const [len, setLen] = useState(8);\n    const [password, setPassword] = useState('z71x@!vd');\n    const [{hasSymbols, hasNumbers}, setBoolean] = useState({\n        hasSymbols: true,\n        hasNumbers: true\n    });\n\n    const [copied, setCopied] = useState(false);\n\n    function generatePassword() {\n        setPassword(createPassword(len, hasNumbers, hasSymbols));\n        setCopied(false);\n    }\n\n    return (\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1 className=\"display-6\">Password Generator</h1>\n                            <hr />\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"form-group\">\n                                        <label>Generated Password {copied && <span className=\"badge badge-success\">Copied!</span>}</label>\n                                        <div className=\"input-group\">\n                                            <input type=\"text\" readOnly className=\"form-control\" value={password} placeholder=\"Generated Password\" />\n                                            <div className=\"input-group-append\">\n                                                <CopyToClipboard text={password}>\n                                                    <button className=\"btn btn-dark\" disabled={password.length !== len || copied} onClick={() => setCopied(true)}>{copied ? 'Copied!': 'Copy to clipboard'}</button>\n                                                </CopyToClipboard>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 bg-white\" style={{margin: 'auto 0', paddingTop: '1rem'}}>\n                            <form>\n                                <div className=\"form-group\">\n                                    <label>Password Length</label>\n                                    <div className=\"input-group\">\n                                        <Input name='password-length' value={len} onChange={e => setLen(e.target.value)} placeholder=\"Password Length\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group form-check\">\n                                    <Input type=\"checkbox\" className=\"form-check-input\" id=\"Symbols\" name='hasSymbols' checked={hasSymbols} onChange={e => setBoolean({hasNumbers, hasSymbols: !hasSymbols})}/>\n                                    <label className=\"form-check-label\" htmlFor=\"Symbols\">Include Symbols</label>\n                                </div>\n                                <div className=\"form-group form-check\">\n                                    <Input type=\"checkbox\" className=\"form-check-input\" id=\"Numbers\" name='hasNumbers' checked={hasNumbers} onChange={e => setBoolean({hasSymbols, hasNumbers: !hasNumbers})}/>\n                                    <label className=\"form-check-label\" htmlFor=\"Numbers\">Include Numbers</label>\n                                </div>\n                                <div className=\"form-group\">\n                                    <button className=\"btn btn-block btn-dark btn-outline\" onClick={(e) =>{e.preventDefault(); generatePassword()}}>Generate Password</button>\n                                </div>\n                            </form>\n                            {hasSymbols}\n                        </div>\n                    </div>\n                </div>\n            </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport {countWords} from '../../helpers/helpers'\n\nexport default function WordCounter() {\n    useEffect(() => {\n        document.title = \"Word Counter\"\n    }, []);\n    \n    const [text, setText] = useState(\"\");\n\n    return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1 className=\"display-6\">Word Counter</h1>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"multiLineText\">Type/Paste text</label>\n                            <textarea rows=\"16\" className=\"form-control\" aria-label=\"With textarea\" name=\"multiLineText\" onChange={e => setText(e.target.value)}></textarea>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"col-md-4\">\n                    <h2 className=\"display-4\">\n                        <small className=\"text-muted\">Words count: </small>\n                        {countWords(text)}\n                    </h2>\n                    <h2 className=\"display-4\">\n                        <small className=\"text-muted\">Character count: </small>\n                        {text.replace(/[\\r\\n\\t]/g, '').length}\n                    </h2>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nexport default function JsonFormatter() {\n    useEffect(() => {\n        document.title = \"JSON Formatter\"\n    }, []);\n\n    const [text, setText] = useState('');\n    const [prerryJSON, setPrettyJSON] = useState('');\n    const [copied, setCopied] = useState(false);\n    const [isInvalid, setIsInvalid] = useState(false);\n\n    function toPrettyJson() {\n        let json = text;\n        try {\n            json = JSON.parse(text)\n            setIsInvalid(false)\n        } catch(err) {\n            setIsInvalid(true)\n            return \"\";\n        }\n          \n        return JSON.stringify(json, undefined, 4);\n    }\n\n    function prettifyJSON(e) {\n        e.preventDefault()\n        setPrettyJSON(toPrettyJson())\n        setCopied(false)\n    }\n\n    return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1 className=\"display-6\">JSON Formatter</h1>\n                            <p className=\"lead\">You can format your minified JSON</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"multiLineText\" className=\"float-left\">JSON Object</label>\n                        <button onClick={(e) => prettifyJSON(e)} className=\"btn btn-sm btn-dark float-right\">Format JSON</button>\n                        \n                        <textarea\n                            rows=\"16\"\n                            className={`form-control ${isInvalid ? 'is-invalid': ''}`}\n                            name=\"multiLineText\"\n                            onChange={e => setText(e.target.value)}>\n                        </textarea>\n                        <div className=\"invalid-feedback\">\n                            Please enter valid JSON\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                        <div>\n                            <label className=\"float-left\">Converted text</label>\n                            <CopyToClipboard text={prerryJSON}>\n                                <button\n                                    className=\"float-right btn btn-dark btn-sm\"\n                                    disabled={prerryJSON.length < 1 || copied || isInvalid}\n                                    onClick={() => setCopied(true)}\n                                >\n                                    {copied ? 'Copied!': 'Copy to clipboard'}\n                                </button>\n                            </CopyToClipboard>\n                        </div>\n                        <textarea rows=\"16\" readOnly className=\"form-control\" value={prerryJSON}></textarea>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react'\n\nexport default function Base64Converter() {\n    useEffect(() => {\n        document.title = \"Base64 Converter\"\n    }, []);\n\n    const [text, setText] = useState(\"https://tools.71anshuman.com\");\n    const [encoded, setEncoded] = useState(\"aHR0cHM6Ly90b29scy43MWFuc2h1bWFuLmNvbQ==\");\n\n    function to64() {\n        setEncoded(btoa(unescape(encodeURIComponent(text))))\n    }\n\n    function toText() {\n        setText(decodeURIComponent(escape(window.atob(encoded))));\n    }\n\n    return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1 className=\"display-6\">Base64 Converter</h1>\n                            <p className=\"lead text-muted\">You can convert <span className=\"text-dark\"><em>String to Base64</em></span> and vice versa</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row align-items-center\">\n                <div className=\"col-md-5\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"multiLineText\">Type/Paste multiliner text</label>\n                            <textarea rows=\"16\" className=\"form-control\" value={text} name=\"multiLineText\" onChange={e => setText(e.target.value)}></textarea>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"col-md-2\">\n                    <div>\n                        <button className=\"btn btn-dark btn-block\" onClick={() => to64()}>\n                            Convert To Base64\n                        </button>\n                        <button className=\"btn btn-outline-dark btn-block\" onClick={() => toText()}>\n                            Convert To Text\n                        </button>\n                    </div>\n                </div>\n                <div className=\"col-md-5\">\n                    <div className=\"form-group\">\n                        <label className=\"\">Converted text</label>\n                        <textarea rows=\"16\" className=\"form-control\" value={encoded} onChange={e => setEncoded(e.target.value)}></textarea>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n","import React, { useState } from 'react'\nimport { numberFormat } from '../../helpers/helpers'\n\nexport default function Breakup(props) {\n    const { data } = props;\n    const [showTable, setShowTable] = useState(false);\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                {data.length > 0 &&\n                    <button className=\"btn btn-light text-uppercase\" onClick={(() => setShowTable(state => !state))}> { showTable ? 'hide breakup' : 'Show breakup' }</button>\n                }\n                {showTable &&\n                    <div class=\"table-responsive\">\n                        <table className=\"table table-striped table-hover table-sm scroll\">\n                            <caption className=\"text-uppercase text-muted text-center\">Loan repayment Breakup</caption>\n                            <thead>\n                            <tr>\n                                {/* <th>Year</th> */}\n                                {/* <th>Month</th> */}\n                                <th>Months</th>\n                                <th>Balance@Bigin</th>\n                                <th>EMI</th>\n                                <th>Investment</th>\n                                <th>Interest</th>\n                                <th>Balance@End</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                data.map((rec, i) => {\n                                const { installment, capital, interest, remain } = rec;\n                                ++i;\n\n                                return <tr key={i}>\n                                    <td>{ i }</td>\n                                    <td>{ numberFormat(remain+capital) }</td>\n                                    <td>{numberFormat(installment)}</td>\n                                    <td>{ numberFormat(capital) }</td>\n                                    <td>{ numberFormat(interest) }</td>\n                                    <td>\n                                    { numberFormat(remain) }\n                                    </td>\n                                </tr>\n                                })\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n","import { Chart } from \"react-google-charts\";\n\nexport default function AmountVsInterestChart(props) {\n    const { meta } = props;\n    const { loanAmount, interestAmount } = meta;\n\n    return (\n        <div>\n            {loanAmount !== 0 &&\n                <Chart\n                    width={'100%'}\n                    height={'500px'}\n                    chartType=\"PieChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                        ['Amount', 'INR'],\n                        ['Loan Amount', loanAmount],\n                        ['Interest Paid', interestAmount],\n                    ]}\n                    options={\n                        {\n                            title: 'Interest VS Loan Amount',\n                            is3D: true,\n                            titleTextStyle: {\n                                fontSize: '24px',\n                            }\n                        }\n                    }\n                    rootProps={{ 'data-testid': '2' }}\n                />\n            }\n        </div>\n    )\n}\n","import { Chart } from \"react-google-charts\";\n\nexport default function InterestVsLoanAmountChart(props) {\n    const { data } = props;\n    return (\n        <div>\n            {data.length > 2 &&\n                <Chart\n                    width={'100%'}\n                    height={'600px'}\n                    chartType=\"AreaChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={data}\n                    options={{\n                    title: 'Interest VS Loan Amount Payment',\n                    hAxis: { title: 'Month', titleTextStyle: { color: '#333' } },\n                    vAxis: { minValue: 0 },\n                    // For the legend to fit, we make the chart area smaller\n                    chartArea: { width: '60%', height: '60%' },\n                    legend: { position: 'bottom', maxLines: 2 },\n                    // lineWidth: 25\n                    }}\n                    // For tests\n                    rootProps={{ 'data-testid': '1' }}\n                />\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { numberFormat } from '../../helpers/helpers'\n\nexport default function DataOverview({meta}) {\n    const { loanAmount, emi, interestAmount, finalBalance } = meta;\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"jumbotron jumbotron-fluid bg-white border-bottom border-grey\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                            <h4><i className=\"fa fa-bars\"></i>\n                                { numberFormat(loanAmount) }<br/>\n                                <small className=\"text-muted\">LOAN AMOUNT</small>\n                            </h4>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <h4>\n                                { numberFormat(emi) }<br/>\n                                <small className=\"text-muted\">EMI AMOUNT</small>\n                            </h4>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <h4>\n                                { numberFormat(interestAmount) }<br/>\n                                <small className=\"text-muted\">INTEREST</small>\n                            </h4>\n                        </div>\n                        <div className=\"col-md-3\">\n                        <h4>\n                            { numberFormat(finalBalance) }<br/>\n                            <small className=\"text-muted text-uppercase\">Amount Paid</small>\n                        </h4>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\n\nimport Breakup from './Breakup';\nimport AmountVsInterestChart from './AmountVsInterestChart';\nimport InterestVsLoanAmountChart from './InterestVsLoanAmountChart';\nimport DataOverview from './DataOverview';\nimport { useFinInput } from '../../hooks/useFinInput';\nimport { getInterestVsLoanAmountData } from '../../helpers/helpers'\nimport Input from '../common/Input';\nimport LoanJS from 'loanjs'\n\nexport default function EMICalculator() {\n    useEffect(() => {\n        document.title = \"EMI Calculator\"\n    }, []);\n\n    const [{loanAmount, tenure, rateOfInterest}, handleChange] = useFinInput(\n        {\n          loanAmount: '',\n          rateOfInterest: '',\n          tenure: '',\n          emiAmount: ''\n        }\n    );\n    \n    const [meta, setMeta] = useState({\n        loanAmount: 0,\n        interestAmount: 0,\n        finalBalance: 0,\n        emi: 0,\n        installments: []\n    });\n\n    const { installments } = meta;\n\n    const [data, setData] = useState([]);\n    \n    function calculate() {\n        const loan = new LoanJS.Loan(\n            loanAmount,\n            tenure * 12, \n            rateOfInterest,\n            false\n        );\n        const {installments, amount, sum, interestSum } = loan;\n\n        setMeta({\n            loanAmount: amount ?? 0,\n            tenure,\n            rateOfInterest,\n            finalBalance: sum,\n            interestAmount: interestSum,\n            emi:installments[0].installment,\n            installments: installments\n        });\n\n        setData(installments)\n    }\n\n    return (\n        <>\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8\">\n                        <h1 className=\"display-6\">EMI Calculator</h1>\n                        <p className=\"lead\">Tip: Your loan tenure must be very less</p>\n                        <div className=\"row\">\n                            {\n                                meta.emi > 0 && <DataOverview meta={meta} />\n                            }\n                        </div>\n                    </div>\n                    <div className=\"col-md-4 bg-white\" style={{margin: 'auto 0', padding: '2rem 1.5rem'}}>\n                        <h2 className=\"display-5\">Loan Details</h2>\n                        <hr />\n                        <form>\n                            <div className=\"form-group\">\n                                <div className=\"input-group\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\">&#8377;</span>\n                                    </div>\n                                    <Input name='loanAmount' value={loanAmount} onChange={handleChange} placeholder=\"Loan Amount\" />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"input-group mb-3\">\n                                    <Input name='tenure' value={tenure} onChange={handleChange} placeholder=\"Loan Tenure\" />\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text\">Years</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"input-group mb-3\">\n                                    <Input name='rateOfInterest' value={rateOfInterest} onChange={handleChange} placeholder=\"Rate of Interest (%)\" />\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text\">%</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-block btn-dark btn-outline\" disabled={!tenure || !rateOfInterest || !loanAmount} onClick={(e) =>{e.preventDefault(); calculate()}}>Calculate</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <InterestVsLoanAmountChart data={getInterestVsLoanAmountData(installments)} />\n            </div>\n            <div className=\"col-md-4\">\n                <AmountVsInterestChart  meta={meta}/>\n            </div>\n            <div className=\"col-md-8\">\n                { data && <Breakup data={data} /> }\n            </div>\n        </div>\n        </>\n    )\n}\n","import {NavLink} from 'react-router-dom';\n\nexport default function ButtonLink(props) {\n    const {text, url} = props;\n    return (\n        <NavLink to={url} activeClassName=\"active\" className=\"btn navlink btn-block btn-outline-light\" {...props}>{text}</NavLink>\n    )\n}\n","import React from 'react'\nimport ButtonLink from './ButtonLink'\nimport './Sidebar.css'\n\nexport default function Sidebar({sidebar}) {\n    const {showSidebar, setShowSidebar} = sidebar;\n    return (\n        <div className=\"col-md-2 col-sm-6 bg-dark left-sidebar\">\n            <ButtonLink onClick={() => setShowSidebar(!showSidebar)} url=\"/sip-calculator\" text=\"SIP Calc\"/>\n            <ButtonLink onClick={() => setShowSidebar(!showSidebar)} url=\"/multi-line-to-single-line\" text=\"Multi To Single Line\"/>\n            <ButtonLink onClick={() => setShowSidebar(!showSidebar)} url=\"/salary-hike-calculator\" text=\"Salary Hike Calc\" />\n            <ButtonLink onClick={() => setShowSidebar(!showSidebar)} url=\"/password-generator\" text=\"Password Gen\" />\n            <ButtonLink onClick={() => setShowSidebar(!showSidebar)} url=\"/word-counter\" text=\"Word Counter\" />\n            <ButtonLink onClick={() => setShowSidebar(!showSidebar)} url=\"/json-formatter\" text=\"JSON Formatter\" />\n            <ButtonLink onClick={() => setShowSidebar(!showSidebar)} url=\"/base-64-converter\" text=\"Base64 Conv\" />\n            <ButtonLink onClick={() => setShowSidebar(!showSidebar)} url=\"/emi-calculator\" text=\"EMI Calc\" />\n        </div>\n    )\n}\n","import {useState} from 'react'\nimport Header from './components/header/Header';\nimport {Switch, Route} from 'react-router-dom';\nimport SipCalculator from './components/sip-calculator'\nimport MultiLineToSingleLine from './components/multi-line-to-single-line';\nimport SalaryHikePerCalculator from './components/salary-hike-percentage-calculator';\nimport PasswordGenerator from './components/password-generator';\nimport WordCounter from \"./components/words-counter\";\nimport JsonFormatter from './components/json-formatter';\nimport Base64Converter from './components/base64-converter/Base64Converter';\nimport EMICalculator from './components/emi-calculator';\nimport Sidebar from './components/sidebar';\n\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(true);\n  return (\n    <>\n    <Header sidebar={{setShowSidebar: setShowSidebar, showSidebar: showSidebar}} />\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        {showSidebar &&\n          <Sidebar sidebar={{setShowSidebar: setShowSidebar, showSidebar: showSidebar}}/>\n        }\n        <div className={`${showSidebar ? 'col-10 offset-md-2 ': 'col-12'}`}>\n          <Switch>\n            <Route exact path=\"/\">\n              <SipCalculator />\n            </Route>\n            <Route path=\"/sip-calculator\">\n              <SipCalculator />\n            </Route>\n            <Route path=\"/multi-line-to-single-line\">\n              <MultiLineToSingleLine />\n            </Route>\n            <Route path=\"/salary-hike-calculator\">\n              <SalaryHikePerCalculator />\n            </Route>\n            <Route path=\"/password-generator\">\n              <PasswordGenerator />\n            </Route>\n            <Route path=\"/word-counter\">\n              <WordCounter />\n            </Route>\n            <Route path=\"/json-formatter\">\n              <JsonFormatter />\n            </Route>\n            <Route path=\"/base-64-converter\">\n              <Base64Converter />\n            </Route>\n            <Route path=\"/emi-calculator\">\n              <EMICalculator />\n            </Route>\n          </Switch>\n          </div>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}